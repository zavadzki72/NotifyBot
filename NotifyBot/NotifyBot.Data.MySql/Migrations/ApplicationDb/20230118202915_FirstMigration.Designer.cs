// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotifyBot.Data.MySql;

#nullable disable

namespace NotifyBot.Data.MySql.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230118202915_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NotifyBot.Domain.Models.Entities.AlertConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AlertType")
                        .HasColumnType("int")
                        .HasColumnName("alert_type");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_alert_configuration");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_alert_configuration_user_id");

                    b.ToTable("alert_configuration", (string)null);
                });

            modelBuilder.Entity("NotifyBot.Domain.Models.Entities.AlertConfigurationPlatform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AlertConfigurationId")
                        .HasColumnType("int")
                        .HasColumnName("alert_configuration_id");

                    b.Property<int>("AlertPlatform")
                        .HasColumnType("int")
                        .HasColumnName("alert_platform");

                    b.HasKey("Id")
                        .HasName("pk_alert_configuration_platform");

                    b.HasIndex("AlertConfigurationId")
                        .HasDatabaseName("ix_alert_configuration_platform_alert_configuration_id");

                    b.ToTable("alert_configuration_platform", (string)null);
                });

            modelBuilder.Entity("NotifyBot.Domain.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_user_name");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("NotifyBot.Domain.Models.Entities.AlertConfiguration", b =>
                {
                    b.HasOne("NotifyBot.Domain.Models.Entities.User", "User")
                        .WithMany("AlertConfigurations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_alert_configuration_user_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NotifyBot.Domain.Models.Entities.AlertConfigurationPlatform", b =>
                {
                    b.HasOne("NotifyBot.Domain.Models.Entities.AlertConfiguration", "AlertConfiguration")
                        .WithMany("AlertConfigurationPlatforms")
                        .HasForeignKey("AlertConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_alert_configuration_platform_alert_configuration_alert_confi");

                    b.Navigation("AlertConfiguration");
                });

            modelBuilder.Entity("NotifyBot.Domain.Models.Entities.AlertConfiguration", b =>
                {
                    b.Navigation("AlertConfigurationPlatforms");
                });

            modelBuilder.Entity("NotifyBot.Domain.Models.Entities.User", b =>
                {
                    b.Navigation("AlertConfigurations");
                });
#pragma warning restore 612, 618
        }
    }
}
